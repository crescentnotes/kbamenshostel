<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            position: relative; /* Necessary for absolute positioning of the pseudo-element */
            overflow: hidden; /* Prevent scroll bars due to pseudo-element */
        }

        /* Background overlay with blur */
        .background-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url("/images/home.jpg");
            background-size: cover;
            background-position: center;
            filter: blur(6px);
            z-index: -1; /* Ensures it is behind the content */
        }

        .register-container {
            position: relative;
            background-color: rgba(255, 255, 255, 0.8);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 400px;
            text-align: center;
        }

        .register-container h1 {
            margin-bottom: 20px;
            color: #333;
        }

        .register-container label {
            display: block;
            margin-bottom: 5px;
            color: #555;
            text-align: left;
        }

        .register-container input {
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .password-container {
            position: relative;
            width: 100%;
        }

        .password-container input {
            width: calc(100% - 40px);
            padding-right: 40px;
        }

        .password-toggle {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            cursor: pointer;
            color: #555;
        }

        .register-container .submit-button {
            width: 100%;
            padding: 10px;
            background-color: #333;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        .register-container .submit-button:hover {
            background-color: #555;
        }

        .register-container a {
            display: block;
            margin-top: 10px;
            color: #333;
            text-decoration: none;
        }

        .register-container a:hover {
            text-decoration: underline;
        }

        .close-button {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 20px;
            color: #555;
            background: none;
            border: none;
            cursor: pointer;
            outline: none;
            padding: 0;
        }

        .close-button:hover {
            color: #000;
        }

        .error-message {
            color: red;
            display: none;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>
<body>
    <div class="background-overlay"></div>
    <div class="register-container">
        <button class="close-button" onclick="history.back()">Ã—</button>
        <h1>Register</h1>
        <form id="registerForm">
            <!-- Name Input -->
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required />

            <!-- Parent's Mobile Number Input -->
            <label for="parentMobNum">Parent's Mobile Number:</label>
            <input type="tel" id="parentMobNum" name="parentMobNum" pattern="[7-9]{1}[0-9]{9}" required placeholder="Enter parent's 10-digit mobile number" />


            <!-- Email Input -->
            <label for="username">Email:</label>
            <input type="email" id="username" name="username" required />

            <!-- Password Input -->
            <label for="password">Password:</label>
            <div class="password-container">
                <input type="password" id="password" name="password" required />
                <i class="fas fa-eye password-toggle" id="togglePassword"></i>
            </div>
            <p id="error-message" class="error-message">Email already exists</p>
            <button type="submit" class="submit-button">Register</button>
        </form>
        <a href="/login">Already have an account? Login</a>
    </div>

    <script>
        const togglePassword = document.getElementById('togglePassword');
        const password = document.getElementById('password');

        togglePassword.addEventListener('click', function () {
            // Toggle the type attribute
            const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
            password.setAttribute('type', type);
            // Toggle the eye / eye slash icon
            this.classList.toggle('fa-eye-slash');
        });

        document.getElementById('registerForm').addEventListener('submit', function(event) {
            event.preventDefault();

            const nameInput = document.getElementById('name');
            const parentMobNumInput = document.getElementById('parentMobNum');
            const usernameInput = document.getElementById('username');
            const passwordInput = document.getElementById('password');
            const errorMessage = document.getElementById('error-message');

            const name = nameInput.value;
            const parentMobNum = parentMobNumInput.value;
            const username = usernameInput.value;
            const password = passwordInput.value;

            fetch('/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ name, parentMobNum, username, password })
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Email already exists') {
                    errorMessage.textContent = data.message;
                    errorMessage.style.display = 'block';
                } else if (data.message === 'User registered successfully') {
                    window.location.href = '/login';
                } else {
                    errorMessage.textContent = data.message;
                    errorMessage.style.display = 'block';
                }
            })
            .catch(error => {
                errorMessage.textContent = 'An error occurred. Please try again later.';
                errorMessage.style.display = 'block';
            });
        });
    </script>
</body>
</html>
